wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: yashjain14 (yashjain14-nanyang-technological-university-singapore) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: yashjain14 (yashjain14-nanyang-technological-university-singapore) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: yashjain14 (yashjain14-nanyang-technological-university-singapore) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: yashjain14 (yashjain14-nanyang-technological-university-singapore) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
usage: gemma.py [-h] [--dataset {imdb,yelp}] [--subset_yelp]
                [--subset_size SUBSET_SIZE] [--ds_config DS_CONFIG]
                [--val_interval VAL_INTERVAL] [--model_name MODEL_NAME]
                [--local_rank LOCAL_RANK]
gemma.py: error: unrecognized arguments: --quantize 4bit --lora_r 16
usage: gemma.py [-h] [--dataset {imdb,yelp}] [--subset_yelp]
                [--subset_size SUBSET_SIZE] [--ds_config DS_CONFIG]
                [--val_interval VAL_INTERVAL] [--model_name MODEL_NAME]
                [--local_rank LOCAL_RANK]
gemma.py: error: unrecognized arguments: --quantize 4bit --lora_r 16
usage: gemma.py [-h] [--dataset {imdb,yelp}] [--subset_yelp]
                [--subset_size SUBSET_SIZE] [--ds_config DS_CONFIG]
                [--val_interval VAL_INTERVAL] [--model_name MODEL_NAME]
                [--local_rank LOCAL_RANK]
gemma.py: error: unrecognized arguments: --quantize 4bit --lora_r 16
usage: gemma.py [-h] [--dataset {imdb,yelp}] [--subset_yelp]
                [--subset_size SUBSET_SIZE] [--ds_config DS_CONFIG]
                [--val_interval VAL_INTERVAL] [--model_name MODEL_NAME]
                [--local_rank LOCAL_RANK]
gemma.py: error: unrecognized arguments: --quantize 4bit --lora_r 16
[rank2]:[W407 21:01:47.549713752 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank3]:[W407 21:01:47.554171923 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank0]:[W407 21:01:48.854198989 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
[rank1]:[W407 21:01:48.943122113 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
